# Broken adaptive ridge regression via coordinate descent algorithms 
ST.BAR <- function(beta, lambda, n) {
  ifelse(beta > 2*sqrt(lambda/n), beta/2+sqrt(beta^2/4-lambda/n),
         ifelse(beta < (-2*sqrt(lambda/n)),beta/2-sqrt(beta^2/4-lambda/n),0))
}

cd_BAR =  function(y, x, lambda, max.iter = 100, eps = 1e-8)
{
  n =  length(y)
  p =  ncol(x)
  
  # standardize
  u =  y - mean(y) #scale(y,scale=F)
  z =  t(t(x) - apply(x, 2, mean))
  norm.z =  apply(z^2, 2, mean)
  z =  t(t(z)/sqrt(norm.z)) #scale(x)
  
  # initialize beta
  init = rep(1,p)
  beta = init
  
  # residual 
  resid =  (u - z %*% beta)
  
  # start update
  for (t in 1:max.iter)
  {
    new.beta =  beta
    for (j in 1:p)                                  
    {
      zj = crossprod(z[,j], resid)/n + beta[j]     
      new.beta[j] = ST.BAR(zj, lambda, n)         
      resid =  resid - z[,j] * (new.beta[j] - beta[j]) 
    }     
    if (max(abs(beta - new.beta)) < eps) break
    beta =  new.beta
  }
  
  # transform back
  return(beta / sqrt(norm.z))
}


# Buckley-James estimator
bjaft = function(dt, tol = 1e-3, max.iter = 100) {
  Y = dt$y; delta = dt$delta; x = as.matrix(dt[,-c(1,2)])
  old.beta = lm(log(Y) ~ x)$coef[-1]
  
  err = 10; iter = 0
  while (max.iter > iter & err > tol) {
    xbeta = c(x%*%old.beta)
    e = log(Y) - xbeta
    es = sort(e)
    sfit = survfit(Surv(e, delta) ~ 1)
    Fhat = 1-approx(x=sfit$time, y=sfit$surv, xout=es)$y
    dF = diff(c(0,Fhat))
    denom = 1-Fhat # rev(cumsum(rev(dF)))
    num = rev(cumsum(rev(es*dF)))
    Yimp = (num/pmax(tol,denom))[rank(e)] +xbeta
    Yhat = log(Y)*delta + (1-delta)*Yimp
    
    new.beta = lm(Yhat ~ x)$coef[-1]
    err = max(abs(new.beta - old.beta))
    iter = iter + 1
    old.beta = new.beta
  }
  list(coef = round(new.beta,3), iter = iter, Yhat=Yhat)
}

# BJ-BAR (Buckley-James imputation + Broken adaptive ridge regression)
# Tuned by BIC
temp <- c()
lambda <- seq(1, 10, by = 1)
for(i in 1:length(lambda)){
  beta.new = round(cd_BAR(bjaft(dt)$Yhat, x, lambda = lambda[i]),3)
  temp[i] <- log(sum((bjaft(dt)$Yhat-x%*%beta.new)^2/n))+ sum(abs(beta.new)>0)*log(n)/n
}
plot(lambda,temp)
lambda[which.min(temp)]
cd_BAR(bjaft(dt)$Yhat, x, lambda = lambda[which.min(temp)])

